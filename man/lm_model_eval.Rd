% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_model_eval.R
\name{lm_model_eval}
\alias{lm_model_eval}
\title{lm_model_eval}
\usage{
lm_model_eval(modelo)
}
\arguments{
\item{modelo}{A fitted regression model object. Supported models include \code{lm} for linear regression and \code{lmerMod} for mixed-effects linear regression.}
}
\value{
A named numeric vector containing the evaluation metrics:
\item{MAE}{Mean Absolute Error of the model.}
\item{MSE}{Mean Squared Error of the model.}
\item{RMSE}{Root Mean Squared Error of the model.}
\item{MAPE}{Mean Absolute Percentage Error of the model.}
\item{AIC}{Akaike Information Criterion.}
\item{BIC}{Bayesian Information Criterion.}
\item{R2}{R-squared for linear models.}
\item{R2_adj}{Adjusted R-squared for linear models.}
\item{R2M}{Marginal R-squared for mixed-effects models (proportion explained by fixed effects).}
\item{R2c}{Conditional R-squared for mixed-effects models (proportion explained by both fixed and random effects).}
\item{Status}{Indicates successful completion (1) or an error (0).}
}
\description{
Evaluates linear and mixed-effects regression models using various metrics.
}
\details{
This function assesses the performance of linear models (\code{lm}) and mixed-effects models (\code{lmerMod})
by calculating a range of evaluation metrics. These metrics include Mean Absolute Error (MAE), Mean Squared Error (MSE),
Root Mean Squared Error (RMSE), Mean Absolute Percentage Error (MAPE), and model information criteria such as AIC and BIC.
For mixed-effects models, the function also calculates conditional and marginal R-squared values.
}
\examples{
# Example of using the lm_model_eval function with a linear regression model
modelo_lm0 <- lm(mpg ~ disp, data = mtcars)
lm_model_eval(modelo_lm0)

# Example of using the function with a more complex linear regression model
modelo_lm <- lm(mpg ~ disp + hp, data = mtcars)
lm_model_eval(modelo_lm)

# Example of using the function with a mixed-effects model
# library(lmerTest)
# modelo_mixed <- lmerTest::lmer(mpg ~ disp + (1|carb), data = mtcars)
# lm_model_eval(modelo_mixed)

# The function returns a named vector with the calculated metrics
}
